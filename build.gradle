apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: "org.sonarqube"

android {
    compileSdk rootProject.ext.compileSdkVersion
    
    defaultConfig {
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion

        consumerProguardFiles "consumer-rules.pro"

        // Specific your ndk.abiFilters in your project, not here. So that it will include the proper abiFilters automatically.

        externalNativeBuild {
            cmake {
                cppFlags ""
            }
            ndk {
                abiFilters "armeabi-v7a", "arm64-v8a"
            }
        }
        sourceSets {
            main {
                jniLibs.srcDirs = ['libs']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    compileOptions {
        sourceCompatibility "$rootProject.ext.java_version"
        targetCompatibility "$rootProject.ext.java_version"
    }
    kotlinOptions {
        jvmTarget = "$rootProject.ext.java_version"
    }
    packagingOptions {
        jniLibs {
            pickFirsts += ['lib/armeabi-v7a/libc++_shared.so',
                           'lib/armeabi-v7a/libjpeg.so',
                           'lib/armeabi-v7a/libturbojpeg.so',

                           'lib/arm64-v8a/libc++_shared.so',
                           'lib/arm64-v8a/libjpeg.so',
                           'lib/arm64-v8a/libturbojpeg.so',
            ]
        }
    }
    namespace 'com.leovp.jpeg_sdk'

    publishing {
        // Publishes "release" build variant with "release" component created by
        // Android Gradle plugin
        singleVariant("release")
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    api "androidx.annotation:annotation:$annotationVersion"
}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release
                groupId = 'com.github.yhz61010'
                artifactId = 'jpeg-sdk'
                version = "$rootProject.ext.jpegSdkVersion"
            }
        }
    }
}